{"version":3,"sources":["components/ActivCityBtn/index.js","components/ActivCityBtn/ActivCityBtn.js","containers/CitySwitcher/CitySwitcher.js","containers/CitySwitcher/index.js","assets/images/icons/sunrise.svg","assets/images/icons/drizzle.svg","assets/images/icons/rain.svg","assets/images/icons/snow.svg","assets/images/icons/thunder.svg","assets/images/icons/tornado.svg","assets/images/icons/stratuscumulus.svg","assets/images/icons/weathercock.svg","helpers/weatherCodeParse.js","pages/HomePage.js","pages/SingleCityPage.js","containers/Header/index.js","containers/Header/Header.js","App.js","index.js"],"names":["ActiveCityBtn","cityName","onClick","active","className","citiesArr","CitySwitcher","setActiveCity","activeCity","map","city","index","weatherCodeParse","weatherCode","thunder","drizzle","rain","snow","tornado","clear","clouds","defaultIcon","HomepPage","useState","isFetched","data","error","activeWeather","setActivWeather","console","log","useEffect","axios","get","params","q","appid","units","then","response","catch","name","Math","round","main","temp","src","weather","id","SingleCityPage","Header","searchText","setSearchText","weatherInfo","setWeatherInfo","to","type","placeholder","value","onChange","e","target","length","alt","App","exact","path","component","HomePage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0a58aa8.chunk.js","sourcesContent":["import ActiveCityBtn from './ActivCityBtn';\r\n\r\nexport default ActiveCityBtn;","import './ActivCityBtn.scss'\r\n\r\nconst ActiveCityBtn = ({cityName, onClick, active}) => {\r\n    return (\r\n        <button\r\n            className={`city-switcher-btn ${active ? 'active' : \"\"}`}\r\n            onClick={onClick}\r\n            >{cityName}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default ActiveCityBtn;","\r\nimport './CitySwitcher.scss'\r\n\r\nimport ActiveCityBtn from '../../components/ActivCityBtn'\r\n\r\n\r\nconst citiesArr = [\r\n    'tashkent',\r\n    'paris',\r\n    'tokyo',\r\n    'medina',\r\n    'dubai',\r\n    'moscow',\r\n    'oslo',\r\n    'minsk'\r\n];\r\n\r\nconst CitySwitcher = ({setActiveCity, activeCity}) => {\r\n    return (\r\n       <div className=\"city-switcher\">\r\n           {\r\n               citiesArr.map((city, index) => (\r\n                    <ActiveCityBtn\r\n                        cityName={city}\r\n                        key={index}\r\n                        onClick={() => setActiveCity(city)}\r\n                        active={activeCity===city}\r\n                    />\r\n               ))\r\n           }\r\n       </div> \r\n    )\r\n}\r\n\r\nexport default CitySwitcher;","import CitySwitcher from './CitySwitcher';\r\n\r\nexport default CitySwitcher;","export default __webpack_public_path__ + \"static/media/sunrise.f287b3b2.svg\";","export default __webpack_public_path__ + \"static/media/drizzle.1fb8a72d.svg\";","export default __webpack_public_path__ + \"static/media/rain.05f5a7b7.svg\";","export default __webpack_public_path__ + \"static/media/snow.8e96e019.svg\";","export default __webpack_public_path__ + \"static/media/thunder.ff061d8c.svg\";","export default __webpack_public_path__ + \"static/media/tornado.4de02705.svg\";","export default __webpack_public_path__ + \"static/media/stratuscumulus.bc3585bd.svg\";","export default __webpack_public_path__ + \"static/media/weathercock.76030378.svg\";","import clear from '../assets/images/icons/sunrise.svg'\r\nimport drizzle from '../assets/images/icons/drizzle.svg'\r\nimport rain from '../assets/images/icons/rain.svg'\r\nimport snow from '../assets/images/icons/snow.svg'\r\nimport thunder from '../assets/images/icons/thunder.svg'\r\nimport tornado from '../assets/images/icons/tornado.svg'\r\nimport clouds from '../assets/images/icons/stratuscumulus.svg'\r\nimport defaultIcon from '../assets/images/icons/weathercock.svg'\r\n\r\n\r\nconst weatherCodeParse = (weatherCode) => {\r\n    switch(true) {\r\n        case 200 <= weatherCode && weatherCode <= 232:\r\n            return thunder;\r\n        case 300 <= weatherCode && weatherCode <= 321:\r\n            return drizzle;\r\n        case 500 <= weatherCode && weatherCode <= 531:\r\n            return rain;\r\n        case 600 <= weatherCode && weatherCode <= 622:\r\n            return snow;\r\n        case 701 <= weatherCode && weatherCode <= 781:\r\n            return tornado;\r\n        case weatherCode === 800 :\r\n            return clear;\r\n        case 801 <= weatherCode && weatherCode <= 804:\r\n            return clouds;\r\n        default:\r\n            return defaultIcon;\r\n    }\r\n}\r\n\r\nexport default weatherCodeParse;","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport CitySwitcher from '../containers/CitySwitcher'\r\n\r\nimport weatherCodeParse from '../helpers/weatherCodeParse'\r\n\r\nconst HomepPage = () => {\r\n\r\n    const [activeCity, setActiveCity ] = useState('tashkent');\r\n    const [activeWeather, setActivWeather ] = useState({\r\n        isFetched: false,\r\n        data: {},\r\n        error: null\r\n    });\r\n\r\n    const fetchWeatherInfo = () => {\r\n        axios.get(`https://api.openweathermap.org/data/2.5/weather`, {\r\n            params: {\r\n              q: activeCity,\r\n              appid: 'dba5075b7d066e436af0750296333d19',\r\n              units: 'metric'\r\n            }\r\n          })\r\n          .then(function (response) {\r\n            setActivWeather({\r\n                isFetched: true,\r\n                data: response.data,\r\n                error: false\r\n            })\r\n          })\r\n          .catch(function (error) {\r\n            setActivWeather({\r\n                isFetched: true,\r\n                data: {},\r\n                error: error\r\n            })\r\n          })\r\n          .then(function () {\r\n            // always executed\r\n          }); \r\n    }\r\n    console.log(activeWeather.data)\r\n    useEffect(() => {\r\n        fetchWeatherInfo();\r\n    }, [activeCity])    \r\n\r\n    return (\r\n        <div className=\"\">\r\n            <CitySwitcher setActiveCity={setActiveCity} activeCity={activeCity}/>     \r\n            <div className=\"\">\r\n                {\r\n                    activeWeather.isFetched ? (\r\n                        <div className=\"main-weather\">\r\n                            <h1>{activeWeather.data.name}</h1>\r\n                            <h1>{Math.round(activeWeather.data.main.temp)}ยบ C</h1>\r\n                            <img className='weather-icon' src={weatherCodeParse(activeWeather.data.weather[0].id)}/>\r\n                            <div>\r\n                                {\r\n                                    activeWeather.data.weather.map((weather) => (\r\n                                        <h1>It's <span className='weather-status'> {weather.main}</span> now in <span className=\"weather-city\">{activeWeather.data.name}</span></h1>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n\r\n                        </div>\r\n                    ) : (\r\n                        <h1>Loading ...</h1>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomepPage;","const SingleCityPage = () => {\r\n    return (\r\n        <h1>SingleCityPage</h1>\r\n    )\r\n}\r\n\r\nexport default SingleCityPage;","import Header from './Header'\r\n\r\nexport default Header;","import {useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport axios from 'axios';\r\n\r\nimport weatherCodeParse from '../../helpers/weatherCodeParse'\r\n\r\nimport './Header.scss'\r\n\r\nconst Header = () => {\r\n    const [searchText, setSearchText] = useState('');\r\n    const [weatherInfo, setWeatherInfo] = useState({\r\n        isFetched: false,\r\n        name: '',\r\n        weather: [],\r\n        temp: {},\r\n        error: null\r\n    });\r\n\r\n    const fetchWeatherInfo = () => {\r\n        axios.get(`https://api.openweathermap.org/data/2.5/weather`, {\r\n            params: {\r\n              q: searchText,\r\n              appid: 'dba5075b7d066e436af0750296333d19',\r\n              units: 'metric'\r\n            }\r\n          })\r\n          .then(function (response) {\r\n            setWeatherInfo({ //hato bolgan shu yerda negaki fetWeatherinfo yozilgan\r\n                isFetched: true,\r\n                name: response.data.name,\r\n                weather: response.data.weather,\r\n                temp: response.data.main,\r\n                error: false\r\n            })\r\n          })\r\n          .catch(function (error) {\r\n            setWeatherInfo({ //hato bolgan shu yerda negaki fetWeatherinfo yozilgan\r\n                isFetched: true,\r\n                name: '',\r\n                weather: [],\r\n                temp: {},\r\n                error: error\r\n            })\r\n          })\r\n          .then(function () {\r\n            // always executed\r\n          }); \r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchWeatherInfo();\r\n    }, [searchText])\r\n\r\n    // console.log(searchText)\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <h1>\r\n                <Link to=\"/\">Weather</Link>\r\n            </h1>\r\n\r\n            <div className=\"search-input\">\r\n                <input\r\n                    type=\"search\"\r\n                    placeholder='Find your sity'\r\n                    value={searchText}\r\n                    onChange={(e) => setSearchText(e.target.value)}\r\n                />\r\n                { \r\n                    searchText.length > 0 ? (\r\n                        <div className=\"search-result\">\r\n                            {\r\n                                weatherInfo.isFetched ? (\r\n                                        <div className=\"\">\r\n                                            {\r\n                                                weatherInfo.weather.length > 0 ? (\r\n                                                    <Link\r\n                                                        className='weather-result-card'\r\n                                                        to={`/city/${weatherInfo.name}`}\r\n                                                    >\r\n                                                        <h4>{weatherInfo.name}</h4>\r\n                                                        <img\r\n                                                            src={weatherCodeParse(weatherInfo.weather[0].id)}\r\n                                                            className='weather-result-icon'\r\n                                                            alt=\"\"\r\n                                                            />\r\n                                                            <h2>{Math.round(weatherInfo.temp.temp)}ยฐ C</h2>\r\n                                                    </Link>\r\n                                                ) : (\r\n                                                    <h3>City nod found</h3>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                ) : (\r\n                                        <h1>Loading ...</h1>\r\n                                ) \r\n                            }\r\n                        </div>\r\n                    ) : (\r\n                        <h1></h1>\r\n                    )\r\n                }\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\n\n// import HomePage from './pages/HomePage'\n// import SingleCityPage from './pages/SingleCityPage'\n\nimport {\n  HomePage,\n  SingleCityPage\n} from './pages'\n\nimport Header from './containers/Header'\n\nimport './assets/main.scss'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n\n        <Header/>\n        <Switch>\n          <Route exact path=\"/\" component={HomePage}/>\n          <Route exact path=\"/city/:cityName\" component={SingleCityPage}/>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}